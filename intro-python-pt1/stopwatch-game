# Submission for "Stopwatch: The Game" in "Introduction to Interactive Programming in Python (Part 1)"
# Cliff Nelson
# August 8, 2018

# template for "Stopwatch: The Game"

import simplegui

# define global variables
timer_value = 0
timer_max = 6000
timer_status = False
times_stopped = 0
times_success = 0
print_value = ""

# define helper function format that converts time
# in tenths of seconds into formatted string A:BC.D
def format(t):
    a = t // 600
    bc = (t % 600) / 10
    if bc < 10:
        bc = "0" + str(bc)
    else:
        bc = str(bc)
    d = (t % 600) % 10
    return str(a) + ":" + bc + "." + str(d)
    
# define event handlers for buttons; "Start", "Stop", "Reset"
def start_handler():
    global timer_status
    if timer_value >= timer_max:
        reset_handler()
    else:
        timer.start()
        timer_status = True

def stop_handler():
    global times_stopped, times_success, timer_status
    timer.stop()
    
    if timer_status:
        times_stopped += 1
        timer_status = False
        if (timer_value % 600) % 10 == 0:
            times_success += 1
    
def reset_handler():
    global timer_value, timer_status, times_stopped, times_success
    timer_value = 0
    timer_status = False
    times_stopped = 0
    times_success = 0
    timer.stop()

# define event handler for timer with 0.1 sec interval
def timer_handler():
    global timer_value
    timer_value += 1
    if timer_value == timer_max:
        timer.stop()

# define draw handler
def draw_handler(canvas):
    global print_value
    print_value = format(timer_value)
    width = frame.get_canvas_textwidth(print_value, 40)
    canvas.draw_text(print_value, (150 - width / 2, 150), 40, 'Red')
    canvas.draw_text(str(times_success) + " / " + str(times_stopped), (250, 20), 20, 'Red')
    
# create frame
frame = simplegui.create_frame('Stopwatch Game', 300, 300)

# register event handlers
timer = simplegui.create_timer(100, timer_handler)
frame.set_draw_handler(draw_handler)
start_button = frame.add_button('Start', start_handler, 200)
stop_button = frame.add_button('Stop', stop_handler, 200)
reset_button = frame.add_button('Reset', reset_handler, 200)

# start frame
frame.start()
